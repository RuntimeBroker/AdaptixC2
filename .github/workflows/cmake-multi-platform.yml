# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go and c

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        pwd
        ls
        chmod +x ./pre_install_linux.sh
        ./pre_install_linux.sh
        cd /home/runner/work/AdaptixC2/AdaptixC2/AdaptixClient
        pwd
        ls
    # #编译go项目
    # - uses: goreleaser/goreleaser-action@v4
    #   with:
    #     workdir: /home/runner/work/AdaptixC2/AdaptixC2/AdaptixServer
    #     args: "release --rm-dist --snapshot"
    #     version: 1.23.0
    #   env:
    #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    #     path: ./ # 可根据你的项目结构选择编译产物路径
        
    # - name: Zip files
    #   run: |
    #     cd ./AdaptixServer
    #     zip -r ./dist/AdaptixC2Server_archive.zip ./dist/AdaptixC2* #编译后的名字 ，在虚拟机默认文件会在dist目录下
    #     ls
        
    - name: Build & Test
      uses: ashutoshvarma/action-cmake-build@master
      with:
          build-dir: /home/runner/work/AdaptixC2/AdaptixC2/AdaptixClient
          # will set the CC & CXX for cmake
          cc: gcc
          cxx: g++
          build-type: Release
          # Extra options pass to cmake while configuring project
          configure-options: -DCMAKE_C_FLAGS=-w32 -DPNG_INCLUDE=OFF
          run-test: true
          ctest-options: -R mytest
          # install the build using cmake --install
          install-build: true
          # run build using '-j [parallel]' to use multiple threads to build
          parallel: 14   
    
    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #      repo_token: ${{ secrets.GITHUB_TOKEN }}
    #      file: /home/runner/work/AdaptixC2/AdaptixC2/AdaptixServer/dist/AdaptixC2Server_archive.zip
    #      tag: ${{ github.ref }}
    #      overwrite: true
    #      file_glob: true
    #      draft: false #编译完成后 会自动发布到release
